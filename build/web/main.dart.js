// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const form = flutter_sdk.src__widgets__form;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const media_query = flutter_sdk.src__widgets__media_query;
  const scaffold = flutter_sdk.src__material__scaffold;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const colors$ = flutter_sdk.src__painting__colors;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const app_bar = flutter_sdk.src__material__app_bar;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const divider = flutter_sdk.src__material__divider;
  const text_input = flutter_sdk.src__services__text_input;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const scroll_physics = flutter_sdk.src__widgets__scroll_physics;
  const checkbox_list_tile = flutter_sdk.src__material__checkbox_list_tile;
  const list_tile = flutter_sdk.src__material__list_tile;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var signin = Object.create(dart.library);
  var form$ = Object.create(dart.library);
  var input = Object.create(dart.library);
  var final = Object.create(dart.library);
  var checkbox = Object.create(dart.library);
  var $toString = dartx.toString;
  var $indexOf = dartx.indexOf;
  var $remove = dartx.remove;
  var $add = dartx.add;
  var $length = dartx.length;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    BuildContextToFormPage: () => (T.BuildContextToFormPage = dart.constFn(dart.fnType(form$.FormPage, [framework.BuildContext])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToFinal: () => (T.BuildContextToFinal = dart.constFn(dart.fnType(final.Final, [framework.BuildContext])))(),
    StringToCheckbox: () => (T.StringToCheckbox = dart.constFn(dart.fnType(checkbox.Checkbox, [core.String])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNTovoid: () => (T.StringNTovoid = dart.constFn(dart.fnType(dart.void, [T.StringN()])))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    BuildContextAndintToSizedBox: () => (T.BuildContextAndintToSizedBox = dart.constFn(dart.fnType(basic.SizedBox, [framework.BuildContext, core.int])))(),
    BuildContextAndintToText: () => (T.BuildContextAndintToText = dart.constFn(dart.fnType(text.Text, [framework.BuildContext, core.int])))(),
    boolN: () => (T.boolN = dart.constFn(dart.nullable(core.bool)))(),
    boolNTovoid: () => (T.boolNTovoid = dart.constFn(dart.fnType(dart.void, [T.boolN()])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.MyApp.prototype,
        [Widget_key]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292932337
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289912795
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4286630852
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283283116
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280723098
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278228616
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278225275
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278221163
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278217052
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278209856
      });
    },
    get C5() {
      return C[5] = dart.constMap(core.int, ui.Color, [50, C[6] || CT.C6, 100, C[7] || CT.C7, 200, C[8] || CT.C8, 300, C[9] || CT.C9, 400, C[10] || CT.C10, 500, C[11] || CT.C11, 600, C[12] || CT.C12, 700, C[13] || CT.C13, 800, C[14] || CT.C14, 900, C[15] || CT.C15]);
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4278228616,
        [ColorSwatch__swatch]: C[5] || CT.C5
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 18,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[4] || CT.C4,
        [TextStyle_inherit]: true
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[3] || CT.C3,
        [Text_textSpan]: null,
        [Text_data]: "Avaliação"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 32,
        [SizedBox_width]: null
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294962158
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294954450
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293892762
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293227379
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293874512
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294198070
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293212469
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292030255
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4291176488
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290190364
      });
    },
    get C21() {
      return C[21] = dart.constMap(core.int, ui.Color, [50, C[22] || CT.C22, 100, C[23] || CT.C23, 200, C[24] || CT.C24, 300, C[25] || CT.C25, 400, C[26] || CT.C26, 500, C[27] || CT.C27, 600, C[28] || CT.C28, 700, C[29] || CT.C29, 800, C[30] || CT.C30, 900, C[31] || CT.C31]);
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4294198070,
        [ColorSwatch__swatch]: C[21] || CT.C21
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 12,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[20] || CT.C20,
        [TextStyle_inherit]: true
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Entrar"
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294638330
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294309365
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848814
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292927712
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4292269782
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290624957
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4288585374
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4285887861
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4284572001
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4282532418
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281348144
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280361249
      });
    },
    get C34() {
      return C[34] = dart.constMap(core.int, ui.Color, [50, C[35] || CT.C35, 100, C[36] || CT.C36, 200, C[37] || CT.C37, 300, C[38] || CT.C38, 350, C[39] || CT.C39, 400, C[40] || CT.C40, 500, C[41] || CT.C41, 600, C[42] || CT.C42, 700, C[43] || CT.C43, 800, C[44] || CT.C44, 850, C[45] || CT.C45, 900, C[46] || CT.C46]);
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [Color_value]: 4288585374,
        [ColorSwatch__swatch]: C[34] || CT.C34
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: ui.Clip.prototype,
        [_Enum__name]: "hardEdge",
        [_Enum_index]: 1
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_Enum__name]: "down",
        [_Enum_index]: 5
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 4000000
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Escolha ao menos uma opção!"
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[48] || CT.C48,
        [SnackBar_dismissDirection]: C[49] || CT.C49,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[50] || CT.C50,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: null,
        [SnackBar_content]: C[51] || CT.C51
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Tecnologias Mobile"
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget_key]: null,
        [Divider_color]: null,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: null,
        [Divider_height]: null
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Enviar"
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: input.InputType.prototype,
        [_Enum__name]: "login",
        [_Enum_index]: 0
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: input.InputType.prototype,
        [_Enum__name]: "password",
        [_Enum_index]: 1
      });
    },
    get C55() {
      return C[55] = dart.constList([C[56] || CT.C56, C[57] || CT.C57], input.InputType);
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "solid",
        [_Enum_index]: 1
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[60] || CT.C60,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[4] || CT.C4
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[62] || CT.C62,
        [BorderRadius_bottomLeft]: C[62] || CT.C62,
        [BorderRadius_topRight]: C[62] || CT.C62,
        [BorderRadius_topLeft]: C[62] || CT.C62
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [InputBorder_borderSide]: C[59] || CT.C59,
        [OutlineInputBorder_borderRadius]: C[61] || CT.C61,
        [OutlineInputBorder_gapPadding]: 4
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Tecnologias selecionadas"
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 4,
        [SizedBox_width]: null
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 0,
        [EdgeInsets_left]: 24
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: null,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[33] || CT.C33,
        [TextStyle_inherit]: true
      });
    }
  }, false);
  var C = Array(67).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/screens/signin.dart",
    "package:flutter_app/screens/form.dart",
    "package:flutter_app/ui/input.dart",
    "package:flutter_app/screens/final.dart",
    "package:flutter_app/ui/checkbox.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Avaliação", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.teal}), home: new signin.SignIn.new()});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.main = function main$0() {
    return binding.runApp(C[1] || CT.C1);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  signin.SignIn = class SignIn extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new signin.SignIn.new({key: key});
    }
    createState() {
      return new signin._SignInState.new();
    }
  };
  (signin.SignIn.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    signin.SignIn.__proto__.new.call(this, {key: key});
    ;
  }).prototype = signin.SignIn.prototype;
  dart.addTypeTests(signin.SignIn);
  dart.addTypeCaches(signin.SignIn);
  dart.setMethodSignature(signin.SignIn, () => ({
    __proto__: dart.getMethods(signin.SignIn.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(signin.SignIn, I[1]);
  var _formKey = dart.privateName(signin, "_formKey");
  var _sendForm = dart.privateName(signin, "_sendForm");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var Color_value = dart.privateName(ui, "Color.value");
  var ColorSwatch__swatch = dart.privateName(colors$, "ColorSwatch._swatch");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  signin._SignInState = class _SignInState extends framework.State$(signin.SignIn) {
    [_sendForm]() {
      if (dart.nullCheck(this[_formKey].currentState).validate()) {
        dart.nullCheck(this[_formKey].currentState).save();
        if (this.login !== "teste" || this.password !== "123") {
          this.setState(dart.fn(() => {
            this.errorMessage = "Acesso não permitido";
          }, T.VoidTovoid()));
        } else {
          navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => new form$.FormPage.new(), T.BuildContextToFormPage())}));
        }
      }
    }
    build(context) {
      let tenPercentOfScreen = media_query.MediaQuery.of(context).size.width / 100 * 10;
      return new scaffold.Scaffold.new({body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: tenPercentOfScreen / 2, horizontal: tenPercentOfScreen > 64 ? tenPercentOfScreen * 1.5 : tenPercentOfScreen}), child: new form.Form.new({key: this[_formKey], child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([C[2] || CT.C2, C[16] || CT.C16, new input.Input.new({onSaved: dart.fn(value => this.login = value, T.StringTovoid())}), C[17] || CT.C17, new input.Input.new({inputType: input.InputType.password, onSaved: dart.fn(value => this.password = value, T.StringTovoid())}), C[18] || CT.C18, this.errorMessage.length > 0 ? new basic.Column.new({children: T.JSArrayOfWidget().of([new text.Text.new(this.errorMessage, {style: C[19] || CT.C19}), C[18] || CT.C18])}) : new basic.SizedBox.shrink(), new basic.SizedBox.new({width: 1 / 0, height: 36, child: new elevated_button.ElevatedButton.new({child: C[32] || CT.C32, onPressed: dart.fn(() => this[_sendForm](), T.VoidTovoid())})})])})})})});
    }
    static ['_#new#tearOff']() {
      return new signin._SignInState.new();
    }
  };
  (signin._SignInState.new = function() {
    this[_formKey] = T.GlobalKeyOfFormState().new();
    this.login = "";
    this.password = "";
    this.errorMessage = "";
    signin._SignInState.__proto__.new.call(this);
    ;
  }).prototype = signin._SignInState.prototype;
  dart.addTypeTests(signin._SignInState);
  dart.addTypeCaches(signin._SignInState);
  dart.setMethodSignature(signin._SignInState, () => ({
    __proto__: dart.getMethods(signin._SignInState.__proto__),
    [_sendForm]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(signin._SignInState, I[1]);
  dart.setFieldSignature(signin._SignInState, () => ({
    __proto__: dart.getFields(signin._SignInState.__proto__),
    [_formKey]: dart.finalFieldType(framework.GlobalKey$(form.FormState)),
    login: dart.fieldType(core.String),
    password: dart.fieldType(core.String),
    errorMessage: dart.fieldType(core.String)
  }));
  var label$ = dart.privateName(form$, "Question.label");
  var alternatives$ = dart.privateName(form$, "Question.alternatives");
  var answer$ = dart.privateName(form$, "Question.answer");
  var group$ = dart.privateName(form$, "Question.group");
  var color$ = dart.privateName(form$, "Question.color");
  form$.Question = class Question extends core.Object {
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get alternatives() {
      return this[alternatives$];
    }
    set alternatives(value) {
      super.alternatives = value;
    }
    get answer() {
      return this[answer$];
    }
    set answer(value) {
      super.answer = value;
    }
    get group() {
      return this[group$];
    }
    set group(value) {
      this[group$] = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      this[color$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let label = opts && 'label' in opts ? opts.label : null;
      let group = opts && 'group' in opts ? opts.group : null;
      let alternatives = opts && 'alternatives' in opts ? opts.alternatives : null;
      let answer = opts && 'answer' in opts ? opts.answer : null;
      let color = opts && 'color' in opts ? opts.color : C[33] || CT.C33;
      return new form$.Question.new({label: label, group: group, alternatives: alternatives, answer: answer, color: color});
    }
  };
  (form$.Question.new = function(opts) {
    let label = opts && 'label' in opts ? opts.label : null;
    let group = opts && 'group' in opts ? opts.group : null;
    let alternatives = opts && 'alternatives' in opts ? opts.alternatives : null;
    let answer = opts && 'answer' in opts ? opts.answer : null;
    let color = opts && 'color' in opts ? opts.color : C[33] || CT.C33;
    this[label$] = label;
    this[group$] = group;
    this[alternatives$] = alternatives;
    this[answer$] = answer;
    this[color$] = color;
    ;
  }).prototype = form$.Question.prototype;
  dart.addTypeTests(form$.Question);
  dart.addTypeCaches(form$.Question);
  dart.setLibraryUri(form$.Question, I[2]);
  dart.setFieldSignature(form$.Question, () => ({
    __proto__: dart.getFields(form$.Question.__proto__),
    label: dart.finalFieldType(core.String),
    alternatives: dart.finalFieldType(core.List$(core.String)),
    answer: dart.finalFieldType(core.String),
    group: dart.fieldType(core.String),
    color: dart.fieldType(ui.Color)
  }));
  form$.FormPage = class FormPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new form$.FormPage.new({key: key});
    }
    createState() {
      return new form$._FormPageState.new();
    }
  };
  (form$.FormPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    form$.FormPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = form$.FormPage.prototype;
  dart.addTypeTests(form$.FormPage);
  dart.addTypeCaches(form$.FormPage);
  dart.setMethodSignature(form$.FormPage, () => ({
    __proto__: dart.getMethods(form$.FormPage.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(form$.FormPage, I[2]);
  var _addTech = dart.privateName(form$, "_addTech");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var SnackBar_clipBehavior = dart.privateName(snack_bar, "SnackBar.clipBehavior");
  var SnackBar_dismissDirection = dart.privateName(snack_bar, "SnackBar.dismissDirection");
  var SnackBar_onVisible = dart.privateName(snack_bar, "SnackBar.onVisible");
  var SnackBar_animation = dart.privateName(snack_bar, "SnackBar.animation");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var SnackBar_duration = dart.privateName(snack_bar, "SnackBar.duration");
  var SnackBar_closeIconColor = dart.privateName(snack_bar, "SnackBar.closeIconColor");
  var SnackBar_showCloseIcon = dart.privateName(snack_bar, "SnackBar.showCloseIcon");
  var SnackBar_action = dart.privateName(snack_bar, "SnackBar.action");
  var SnackBar_behavior = dart.privateName(snack_bar, "SnackBar.behavior");
  var SnackBar_shape = dart.privateName(snack_bar, "SnackBar.shape");
  var SnackBar_width = dart.privateName(snack_bar, "SnackBar.width");
  var SnackBar_padding = dart.privateName(snack_bar, "SnackBar.padding");
  var SnackBar_margin = dart.privateName(snack_bar, "SnackBar.margin");
  var SnackBar_elevation = dart.privateName(snack_bar, "SnackBar.elevation");
  var SnackBar_backgroundColor = dart.privateName(snack_bar, "SnackBar.backgroundColor");
  var SnackBar_content = dart.privateName(snack_bar, "SnackBar.content");
  var _send = dart.privateName(form$, "_send");
  var Divider_color = dart.privateName(divider, "Divider.color");
  var Divider_endIndent = dart.privateName(divider, "Divider.endIndent");
  var Divider_indent = dart.privateName(divider, "Divider.indent");
  var Divider_thickness = dart.privateName(divider, "Divider.thickness");
  var Divider_height = dart.privateName(divider, "Divider.height");
  form$._FormPageState = class _FormPageState extends framework.State$(form$.FormPage) {
    [_addTech](tech) {
      let filterIndex = this.selectedTechs[$indexOf](tech);
      filterIndex > -1 ? this.selectedTechs[$remove](tech) : this.selectedTechs[$add](tech);
    }
    [_send]() {
      if (this.selectedTechs[$length] === 0) {
        scaffold.ScaffoldMessenger.of(this.context).showSnackBar(C[47] || CT.C47);
      } else {
        navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => new final.Final.new({techs: this.selectedTechs}), T.BuildContextToFinal())}));
      }
    }
    build(context) {
      let fivePercentOfScreen = media_query.MediaQuery.of(context).size.width / 100 * 5;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[52] || CT.C52, centerTitle: true, automaticallyImplyLeading: false}), body: new single_child_scroll_view.SingleChildScrollView.new({padding: new edge_insets.EdgeInsets.only({bottom: fivePercentOfScreen, right: fivePercentOfScreen > 64 ? fivePercentOfScreen * 1.5 : fivePercentOfScreen, left: fivePercentOfScreen > 64 ? fivePercentOfScreen * 1.5 : fivePercentOfScreen}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[18] || CT.C18, new text.Text.new("Indique quais tecnologias de desenvolvimento mobile você conhece:", {style: new text_style.TextStyle.new({fontSize: 16})}), C[17] || CT.C17, new basic.Column.new({children: this.techs[$map](checkbox.Checkbox, dart.fn(tech => {
                  let isChecked = this.selectedTechs[$indexOf](tech) > -1;
                  return new checkbox.Checkbox.new({label: tech, isChecked: isChecked, onPress: dart.fn(() => {
                      this[_addTech](tech);
                      this.setState(dart.fn(() => {
                        isChecked = !isChecked;
                      }, T.VoidTovoid()));
                    }, T.VoidToNull())});
                }, T.StringToCheckbox()))[$toList]()}), C[18] || CT.C18, C[53] || CT.C53, C[18] || CT.C18, new basic.SizedBox.new({height: 32, width: media_query.MediaQuery.of(context).size.width, child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => this[_send](), T.VoidTovoid()), child: C[54] || CT.C54})})])})})});
    }
    static ['_#new#tearOff']() {
      return new form$._FormPageState.new();
    }
  };
  (form$._FormPageState.new = function() {
    this.techs = T.JSArrayOfString().of(["Flutter", "React" + "Native", "Kotlin", "Java", "Ionic"]);
    this.selectedTechs = T.JSArrayOfString().of([]);
    form$._FormPageState.__proto__.new.call(this);
    ;
  }).prototype = form$._FormPageState.prototype;
  dart.addTypeTests(form$._FormPageState);
  dart.addTypeCaches(form$._FormPageState);
  dart.setMethodSignature(form$._FormPageState, () => ({
    __proto__: dart.getMethods(form$._FormPageState.__proto__),
    [_addTech]: dart.fnType(dart.void, [core.String]),
    [_send]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(form$._FormPageState, I[2]);
  dart.setFieldSignature(form$._FormPageState, () => ({
    __proto__: dart.getFields(form$._FormPageState.__proto__),
    techs: dart.finalFieldType(core.List$(core.String)),
    selectedTechs: dart.fieldType(core.List$(core.String))
  }));
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  input.InputType = class InputType extends core._Enum {
    [_enumToString]() {
      return "InputType." + this[_name];
    }
  };
  (input.InputType.new = function(index, name) {
    input.InputType.__proto__.new.call(this, index, name);
    ;
  }).prototype = input.InputType.prototype;
  dart.addTypeTests(input.InputType);
  dart.addTypeCaches(input.InputType);
  dart.setMethodSignature(input.InputType, () => ({
    __proto__: dart.getMethods(input.InputType.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(input.InputType, I[3]);
  dart.setStaticFieldSignature(input.InputType, () => ['values', 'login', 'password']);
  dart.defineLazy(input.InputType, {
    /*input.InputType.values*/get values() {
      return C[55] || CT.C55;
    },
    /*input.InputType.login*/get login() {
      return C[56] || CT.C56;
    },
    /*input.InputType.password*/get password() {
      return C[57] || CT.C57;
    }
  }, false);
  var onSaved$ = dart.privateName(input, "Input.onSaved");
  var inputType$ = dart.privateName(input, "Input.inputType");
  input.Input = class Input extends framework.StatefulWidget {
    get onSaved() {
      return this[onSaved$];
    }
    set onSaved(value) {
      super.onSaved = value;
    }
    get inputType() {
      return this[inputType$];
    }
    set inputType(value) {
      super.inputType = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
      let inputType = opts && 'inputType' in opts ? opts.inputType : C[56] || CT.C56;
      return new input.Input.new({key: key, onSaved: onSaved, inputType: inputType});
    }
    createState() {
      return new input._InputState.new();
    }
  };
  (input.Input.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
    let inputType = opts && 'inputType' in opts ? opts.inputType : C[56] || CT.C56;
    this[onSaved$] = onSaved;
    this[inputType$] = inputType;
    input.Input.__proto__.new.call(this, {key: key});
    ;
  }).prototype = input.Input.prototype;
  dart.addTypeTests(input.Input);
  dart.addTypeCaches(input.Input);
  dart.setMethodSignature(input.Input, () => ({
    __proto__: dart.getMethods(input.Input.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(input.Input, I[3]);
  dart.setFieldSignature(input.Input, () => ({
    __proto__: dart.getFields(input.Input.__proto__),
    onSaved: dart.finalFieldType(dart.fnType(dart.void, [core.String])),
    inputType: dart.finalFieldType(input.InputType)
  }));
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var InputBorder_borderSide = dart.privateName(input_border, "InputBorder.borderSide");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var OutlineInputBorder_borderRadius = dart.privateName(input_border, "OutlineInputBorder.borderRadius");
  var OutlineInputBorder_gapPadding = dart.privateName(input_border, "OutlineInputBorder.gapPadding");
  input._InputState = class _InputState extends framework.State$(input.Input) {
    build(context) {
      let isPassword = this.widget.inputType === input.InputType.password;
      let inputKeyboardType = text_input.TextInputType.text;
      if (isPassword) inputKeyboardType = text_input.TextInputType.visiblePassword;
      return new text_form_field.TextFormField.new({onSaved: dart.fn(value => {
          let t2, t3, t2$;
          t2$ = this.widget;
          t3 = (t2 = value, t2 == null ? "" : t2);
          return t2$.onSaved(t3);
        }, T.StringNTovoid()), keyboardType: inputKeyboardType, decoration: new input_decorator.InputDecoration.new({hintText: isPassword ? "Digite sua senha" : "Digite seu login", border: new input_border.OutlineInputBorder.new(), label: new text.Text.new(isPassword ? "Senha" : "Login"), focusedBorder: C[58] || CT.C58, prefixIcon: isPassword ? new icon.Icon.new(icons.Icons.lock_outline) : new icon.Icon.new(icons.Icons.email_outlined)}), obscureText: isPassword, validator: dart.fn(value => {
          let t2;
          if ((t2 = value, t2 == null ? null : t2.length) === 0) return "Campo obrigatório";
        }, T.StringNToStringN())});
    }
    static ['_#new#tearOff']() {
      return new input._InputState.new();
    }
  };
  (input._InputState.new = function() {
    input._InputState.__proto__.new.call(this);
    ;
  }).prototype = input._InputState.prototype;
  dart.addTypeTests(input._InputState);
  dart.addTypeCaches(input._InputState);
  dart.setMethodSignature(input._InputState, () => ({
    __proto__: dart.getMethods(input._InputState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(input._InputState, I[3]);
  var techs$ = dart.privateName(final, "Final.techs");
  final.Final = class Final extends framework.StatelessWidget {
    get techs() {
      return this[techs$];
    }
    set techs(value) {
      super.techs = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let techs = opts && 'techs' in opts ? opts.techs : null;
      return new final.Final.new({key: key, techs: techs});
    }
    build(context) {
      let tenPercentOfScreen = media_query.MediaQuery.of(context).size.width / 100 * 10;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[63] || CT.C63}), body: new basic.Padding.new({padding: new edge_insets.EdgeInsets.symmetric({vertical: tenPercentOfScreen / 2, horizontal: tenPercentOfScreen > 64 ? tenPercentOfScreen * 1.5 : tenPercentOfScreen}), child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new scroll_view.ListView.separated({shrinkWrap: true, physics: new scroll_physics.ClampingScrollPhysics.new(), itemCount: this.techs[$length], separatorBuilder: dart.fn((_, index) => C[64] || CT.C64, T.BuildContextAndintToSizedBox()), itemBuilder: dart.fn((_, index) => new text.Text.new(this.techs[$_get](index), {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({fontSize: 16})}), T.BuildContextAndintToText())}), C[18] || CT.C18, new text.Text.new("Informações enviadas ao servidor", {style: new text_style.TextStyle.new({fontSize: 14, color: colors.Colors.grey})})])})})});
    }
  };
  (final.Final.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let techs = opts && 'techs' in opts ? opts.techs : null;
    this[techs$] = techs;
    final.Final.__proto__.new.call(this, {key: key});
    ;
  }).prototype = final.Final.prototype;
  dart.addTypeTests(final.Final);
  dart.addTypeCaches(final.Final);
  dart.setMethodSignature(final.Final, () => ({
    __proto__: dart.getMethods(final.Final.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(final.Final, I[4]);
  dart.setFieldSignature(final.Final, () => ({
    __proto__: dart.getFields(final.Final.__proto__),
    techs: dart.finalFieldType(core.List$(core.String))
  }));
  var label$0 = dart.privateName(checkbox, "Checkbox.label");
  var onPress$ = dart.privateName(checkbox, "Checkbox.onPress");
  var isChecked$ = dart.privateName(checkbox, "Checkbox.isChecked");
  checkbox.Checkbox = class Checkbox extends framework.StatefulWidget {
    get label() {
      return this[label$0];
    }
    set label(value) {
      super.label = value;
    }
    get onPress() {
      return this[onPress$];
    }
    set onPress(value) {
      super.onPress = value;
    }
    get isChecked() {
      return this[isChecked$];
    }
    set isChecked(value) {
      super.isChecked = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let label = opts && 'label' in opts ? opts.label : null;
      let onPress = opts && 'onPress' in opts ? opts.onPress : null;
      let isChecked = opts && 'isChecked' in opts ? opts.isChecked : false;
      return new checkbox.Checkbox.new({key: key, label: label, onPress: onPress, isChecked: isChecked});
    }
    createState() {
      return new checkbox._CheckboxState.new();
    }
  };
  (checkbox.Checkbox.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let label = opts && 'label' in opts ? opts.label : null;
    let onPress = opts && 'onPress' in opts ? opts.onPress : null;
    let isChecked = opts && 'isChecked' in opts ? opts.isChecked : false;
    this[label$0] = label;
    this[onPress$] = onPress;
    this[isChecked$] = isChecked;
    checkbox.Checkbox.__proto__.new.call(this, {key: key});
    ;
  }).prototype = checkbox.Checkbox.prototype;
  dart.addTypeTests(checkbox.Checkbox);
  dart.addTypeCaches(checkbox.Checkbox);
  dart.setMethodSignature(checkbox.Checkbox, () => ({
    __proto__: dart.getMethods(checkbox.Checkbox.__proto__),
    createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
  }));
  dart.setLibraryUri(checkbox.Checkbox, I[5]);
  dart.setFieldSignature(checkbox.Checkbox, () => ({
    __proto__: dart.getFields(checkbox.Checkbox.__proto__),
    label: dart.finalFieldType(core.String),
    onPress: dart.finalFieldType(core.Function),
    isChecked: dart.finalFieldType(core.bool)
  }));
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  checkbox._CheckboxState = class _CheckboxState extends framework.State$(checkbox.Checkbox) {
    build(context) {
      return new checkbox_list_tile.CheckboxListTile.new({contentPadding: C[65] || CT.C65, controlAffinity: list_tile.ListTileControlAffinity.leading, visualDensity: theme_data.VisualDensity.comfortable, title: new text.Text.new(this.widget.label, {style: C[66] || CT.C66}), value: this.widget.isChecked, onChanged: dart.fn(value => dart.dsend(this.widget, 'onPress', []), T.boolNTovoid())});
    }
    static ['_#new#tearOff']() {
      return new checkbox._CheckboxState.new();
    }
  };
  (checkbox._CheckboxState.new = function() {
    checkbox._CheckboxState.__proto__.new.call(this);
    ;
  }).prototype = checkbox._CheckboxState.prototype;
  dart.addTypeTests(checkbox._CheckboxState);
  dart.addTypeCaches(checkbox._CheckboxState);
  dart.setMethodSignature(checkbox._CheckboxState, () => ({
    __proto__: dart.getMethods(checkbox._CheckboxState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(checkbox._CheckboxState, I[5]);
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/screens/signin.dart": signin,
    "package:flutter_app/screens/form.dart": form$,
    "package:flutter_app/ui/input.dart": input,
    "package:flutter_app/screens/final.dart": final,
    "package:flutter_app/ui/checkbox.dart": checkbox
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/screens/signin.dart","/zapp/project/lib/screens/form.dart","/zapp/project/lib/ui/input.dart","/zapp/project/lib/screens/final.dart","/zapp/project/lib/ui/checkbox.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    screens__signin: signin,
    screens__form: form$,
    ui__input: input,
    screens__final: final,
    ui__checkbox: checkbox
  };
}));

//# sourceMappingURL=main.js.map
